// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select Cascader Select 1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "11",
          },
          Object {
            "label": "选项二",
            "value": "12",
          },
        ],
        "label": "选项一",
        "value": "1",
      },
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "21",
          },
          Object {
            "label": "选项二",
            "value": "22",
          },
        ],
        "label": "选项一",
        "value": "2",
      },
    ]
  }
>
  <LocaleReceiver
    dataSource={
      Array [
        Object {
          "children": Array [
            Object {
              "label": "选项一",
              "value": "11",
            },
            Object {
              "label": "选项二",
              "value": "12",
            },
          ],
          "label": "选项一",
          "value": "1",
        },
        Object {
          "children": Array [
            Object {
              "label": "选项一",
              "value": "21",
            },
            Object {
              "label": "选项二",
              "value": "22",
            },
          ],
          "label": "选项一",
          "value": "2",
        },
      ]
    }
    forwardedRef={null}
  >
    <Select
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "11",
              },
              Object {
                "label": "选项二",
                "value": "12",
              },
            ],
            "label": "选项一",
            "value": "1",
          },
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "21",
              },
              Object {
                "label": "选项二",
                "value": "22",
              },
            ],
            "label": "选项一",
            "value": "2",
          },
        ]
      }
      displayRender={[Function]}
      hasArrow={true}
      itemRender={[Function]}
      locale={
        Object {
          "placeholder": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      onClick={[Function]}
      prefixCls="mcore-select"
      valueMember="value"
    >
      <div
        className="mcore-select mcore-select--placeholder mcore-select--arrow"
        onClick={[Function]}
      >
        <div
          className="mcore-select__input"
        >
          <div
            className="mcore-select__value"
          >
            请选择
          </div>
        </div>
        <ForwardRef(forwardRef)
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "11",
                  },
                  Object {
                    "label": "选项二",
                    "value": "12",
                  },
                ],
                "label": "选项一",
                "value": "1",
              },
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "21",
                  },
                  Object {
                    "label": "选项二",
                    "value": "22",
                  },
                ],
                "label": "选项一",
                "value": "2",
              },
            ]
          }
          itemRender={[Function]}
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          valueMember="value"
          visible={false}
        >
          <LocaleReceiver
            cols={Infinity}
            dataSource={
              Array [
                Object {
                  "children": Array [
                    Object {
                      "label": "选项一",
                      "value": "11",
                    },
                    Object {
                      "label": "选项二",
                      "value": "12",
                    },
                  ],
                  "label": "选项一",
                  "value": "1",
                },
                Object {
                  "children": Array [
                    Object {
                      "label": "选项一",
                      "value": "21",
                    },
                    Object {
                      "label": "选项二",
                      "value": "22",
                    },
                  ],
                  "label": "选项一",
                  "value": "2",
                },
              ]
            }
            forwardedRef={null}
            itemRender={[Function]}
            localeCode="zh-CN"
            maskClosable={true}
            onCancel={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onOk={[Function]}
            valueMember="value"
            visible={false}
          >
            <Picker
              cols={Infinity}
              dataSource={
                Array [
                  Object {
                    "children": Array [
                      Object {
                        "label": "选项一",
                        "value": "11",
                      },
                      Object {
                        "label": "选项二",
                        "value": "12",
                      },
                    ],
                    "label": "选项一",
                    "value": "1",
                  },
                  Object {
                    "children": Array [
                      Object {
                        "label": "选项一",
                        "value": "21",
                      },
                      Object {
                        "label": "选项二",
                        "value": "22",
                      },
                    ],
                    "label": "选项一",
                    "value": "2",
                  },
                ]
              }
              destroy={false}
              itemRender={[Function]}
              locale={
                Object {
                  "cancelText": "取消",
                  "okText": "确定",
                  "title": "请选择",
                }
              }
              localeCode="zh-CN"
              maskClosable={true}
              onCancel={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onOk={[Function]}
              prefixCls="mcore-picker"
              valueMember="value"
              visible={false}
            >
              <ForwardRef(ForwardedRefComp)
                destroy={false}
                onMaskClick={[Function]}
                visible={false}
              >
                <WarnIfDeprecatedComp
                  destroy={false}
                  forwardedRef={null}
                  onMaskClick={[Function]}
                  visible={false}
                >
                  <Popup
                    destroy={false}
                    onMaskClick={[Function]}
                    prefixCls="mcore-popup"
                    visible={false}
                  />
                </WarnIfDeprecatedComp>
              </ForwardRef(ForwardedRefComp)>
            </Picker>
          </LocaleReceiver>
        </ForwardRef(forwardRef)>
      </div>
    </Select>
  </LocaleReceiver>
</ForwardRef(forwardRef)>
`;

exports[`Select Cascader Select init value 1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "11",
          },
          Object {
            "label": "选项二",
            "value": "12",
          },
        ],
        "label": "选项一",
        "value": "1",
      },
      Object {
        "children": Array [
          Object {
            "label": "选项一",
            "value": "21",
          },
          Object {
            "label": "选项二",
            "value": "22",
          },
        ],
        "label": "选项一",
        "value": "2",
      },
    ]
  }
  displayAddon="-"
  value={
    Array [
      "1",
      "12",
    ]
  }
>
  <LocaleReceiver
    dataSource={
      Array [
        Object {
          "children": Array [
            Object {
              "label": "选项一",
              "value": "11",
            },
            Object {
              "label": "选项二",
              "value": "12",
            },
          ],
          "label": "选项一",
          "value": "1",
        },
        Object {
          "children": Array [
            Object {
              "label": "选项一",
              "value": "21",
            },
            Object {
              "label": "选项二",
              "value": "22",
            },
          ],
          "label": "选项一",
          "value": "2",
        },
      ]
    }
    displayAddon="-"
    forwardedRef={null}
    value={
      Array [
        "1",
        "12",
      ]
    }
  >
    <Select
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "11",
              },
              Object {
                "label": "选项二",
                "value": "12",
              },
            ],
            "label": "选项一",
            "value": "1",
          },
          Object {
            "children": Array [
              Object {
                "label": "选项一",
                "value": "21",
              },
              Object {
                "label": "选项二",
                "value": "22",
              },
            ],
            "label": "选项一",
            "value": "2",
          },
        ]
      }
      displayAddon="-"
      displayRender={[Function]}
      hasArrow={true}
      itemRender={[Function]}
      locale={
        Object {
          "placeholder": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      onClick={[Function]}
      prefixCls="mcore-select"
      value={
        Array [
          "1",
          "12",
        ]
      }
      valueMember="value"
    >
      <div
        className="mcore-select mcore-select--arrow"
        onClick={[Function]}
      >
        <div
          className="mcore-select__input"
        >
          <div
            className="mcore-select__value"
          >
            选项一
            选项二
          </div>
        </div>
        <ForwardRef(forwardRef)
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "11",
                  },
                  Object {
                    "label": "选项二",
                    "value": "12",
                  },
                ],
                "label": "选项一",
                "value": "1",
              },
              Object {
                "children": Array [
                  Object {
                    "label": "选项一",
                    "value": "21",
                  },
                  Object {
                    "label": "选项二",
                    "value": "22",
                  },
                ],
                "label": "选项一",
                "value": "2",
              },
            ]
          }
          displayAddon="-"
          itemRender={[Function]}
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          value={
            Array [
              "1",
              "12",
            ]
          }
          valueMember="value"
          visible={false}
        >
          <LocaleReceiver
            cols={Infinity}
            dataSource={
              Array [
                Object {
                  "children": Array [
                    Object {
                      "label": "选项一",
                      "value": "11",
                    },
                    Object {
                      "label": "选项二",
                      "value": "12",
                    },
                  ],
                  "label": "选项一",
                  "value": "1",
                },
                Object {
                  "children": Array [
                    Object {
                      "label": "选项一",
                      "value": "21",
                    },
                    Object {
                      "label": "选项二",
                      "value": "22",
                    },
                  ],
                  "label": "选项一",
                  "value": "2",
                },
              ]
            }
            displayAddon="-"
            forwardedRef={null}
            itemRender={[Function]}
            localeCode="zh-CN"
            maskClosable={true}
            onCancel={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onOk={[Function]}
            value={
              Array [
                "1",
                "12",
              ]
            }
            valueMember="value"
            visible={false}
          >
            <Picker
              cols={Infinity}
              dataSource={
                Array [
                  Object {
                    "children": Array [
                      Object {
                        "label": "选项一",
                        "value": "11",
                      },
                      Object {
                        "label": "选项二",
                        "value": "12",
                      },
                    ],
                    "label": "选项一",
                    "value": "1",
                  },
                  Object {
                    "children": Array [
                      Object {
                        "label": "选项一",
                        "value": "21",
                      },
                      Object {
                        "label": "选项二",
                        "value": "22",
                      },
                    ],
                    "label": "选项一",
                    "value": "2",
                  },
                ]
              }
              destroy={false}
              displayAddon="-"
              itemRender={[Function]}
              locale={
                Object {
                  "cancelText": "取消",
                  "okText": "确定",
                  "title": "请选择",
                }
              }
              localeCode="zh-CN"
              maskClosable={true}
              onCancel={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onOk={[Function]}
              prefixCls="mcore-picker"
              value={
                Array [
                  "1",
                  "12",
                ]
              }
              valueMember="value"
              visible={false}
            >
              <ForwardRef(ForwardedRefComp)
                destroy={false}
                onMaskClick={[Function]}
                visible={false}
              >
                <WarnIfDeprecatedComp
                  destroy={false}
                  forwardedRef={null}
                  onMaskClick={[Function]}
                  visible={false}
                >
                  <Popup
                    destroy={false}
                    onMaskClick={[Function]}
                    prefixCls="mcore-popup"
                    visible={false}
                  />
                </WarnIfDeprecatedComp>
              </ForwardRef(ForwardedRefComp)>
            </Picker>
          </LocaleReceiver>
        </ForwardRef(forwardRef)>
      </div>
    </Select>
  </LocaleReceiver>
</ForwardRef(forwardRef)>
`;

exports[`Select Select 1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
>
  <LocaleReceiver
    dataSource={
      Array [
        Object {
          "label": "选项一",
          "value": "1",
        },
        Object {
          "label": "选项二",
          "value": "2",
        },
      ]
    }
    forwardedRef={null}
  >
    <Select
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      displayRender={[Function]}
      hasArrow={true}
      itemRender={[Function]}
      locale={
        Object {
          "placeholder": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      onClick={[Function]}
      prefixCls="mcore-select"
      valueMember="value"
    >
      <div
        className="mcore-select mcore-select--placeholder mcore-select--arrow"
        onClick={[Function]}
      >
        <div
          className="mcore-select__input"
        >
          <div
            className="mcore-select__value"
          >
            请选择
          </div>
        </div>
        <ForwardRef(forwardRef)
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "label": "选项一",
                "value": "1",
              },
              Object {
                "label": "选项二",
                "value": "2",
              },
            ]
          }
          itemRender={[Function]}
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          valueMember="value"
          visible={false}
        >
          <LocaleReceiver
            cols={Infinity}
            dataSource={
              Array [
                Object {
                  "label": "选项一",
                  "value": "1",
                },
                Object {
                  "label": "选项二",
                  "value": "2",
                },
              ]
            }
            forwardedRef={null}
            itemRender={[Function]}
            localeCode="zh-CN"
            maskClosable={true}
            onCancel={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onOk={[Function]}
            valueMember="value"
            visible={false}
          >
            <Picker
              cols={Infinity}
              dataSource={
                Array [
                  Object {
                    "label": "选项一",
                    "value": "1",
                  },
                  Object {
                    "label": "选项二",
                    "value": "2",
                  },
                ]
              }
              destroy={false}
              itemRender={[Function]}
              locale={
                Object {
                  "cancelText": "取消",
                  "okText": "确定",
                  "title": "请选择",
                }
              }
              localeCode="zh-CN"
              maskClosable={true}
              onCancel={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onOk={[Function]}
              prefixCls="mcore-picker"
              valueMember="value"
              visible={false}
            >
              <ForwardRef(ForwardedRefComp)
                destroy={false}
                onMaskClick={[Function]}
                visible={false}
              >
                <WarnIfDeprecatedComp
                  destroy={false}
                  forwardedRef={null}
                  onMaskClick={[Function]}
                  visible={false}
                >
                  <Popup
                    destroy={false}
                    onMaskClick={[Function]}
                    prefixCls="mcore-popup"
                    visible={false}
                  />
                </WarnIfDeprecatedComp>
              </ForwardRef(ForwardedRefComp)>
            </Picker>
          </LocaleReceiver>
        </ForwardRef(forwardRef)>
      </div>
    </Select>
  </LocaleReceiver>
</ForwardRef(forwardRef)>
`;

exports[`Select Select disabled 1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
  disabeld={true}
>
  <LocaleReceiver
    dataSource={
      Array [
        Object {
          "label": "选项一",
          "value": "1",
        },
        Object {
          "label": "选项二",
          "value": "2",
        },
      ]
    }
    disabeld={true}
    forwardedRef={null}
  >
    <Select
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      disabeld={true}
      displayRender={[Function]}
      hasArrow={true}
      itemRender={[Function]}
      locale={
        Object {
          "placeholder": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      onClick={[Function]}
      prefixCls="mcore-select"
      valueMember="value"
    >
      <div
        className="mcore-select mcore-select--placeholder mcore-select--arrow"
        onClick={[Function]}
      >
        <div
          className="mcore-select__input"
        >
          <div
            className="mcore-select__value"
          >
            请选择
          </div>
        </div>
        <ForwardRef(forwardRef)
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "label": "选项一",
                "value": "1",
              },
              Object {
                "label": "选项二",
                "value": "2",
              },
            ]
          }
          disabeld={true}
          itemRender={[Function]}
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          valueMember="value"
          visible={true}
        >
          <LocaleReceiver
            cols={Infinity}
            dataSource={
              Array [
                Object {
                  "label": "选项一",
                  "value": "1",
                },
                Object {
                  "label": "选项二",
                  "value": "2",
                },
              ]
            }
            disabeld={true}
            forwardedRef={null}
            itemRender={[Function]}
            localeCode="zh-CN"
            maskClosable={true}
            onCancel={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onOk={[Function]}
            valueMember="value"
            visible={true}
          >
            <Picker
              cols={Infinity}
              dataSource={
                Array [
                  Object {
                    "label": "选项一",
                    "value": "1",
                  },
                  Object {
                    "label": "选项二",
                    "value": "2",
                  },
                ]
              }
              destroy={false}
              disabeld={true}
              itemRender={[Function]}
              locale={
                Object {
                  "cancelText": "取消",
                  "okText": "确定",
                  "title": "请选择",
                }
              }
              localeCode="zh-CN"
              maskClosable={true}
              onCancel={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onOk={[Function]}
              prefixCls="mcore-picker"
              valueMember="value"
              visible={true}
            >
              <ForwardRef(ForwardedRefComp)
                destroy={false}
                onMaskClick={[Function]}
                visible={true}
              >
                <WarnIfDeprecatedComp
                  destroy={false}
                  forwardedRef={null}
                  onMaskClick={[Function]}
                  visible={true}
                >
                  <Popup
                    destroy={false}
                    onMaskClick={[Function]}
                    prefixCls="mcore-popup"
                    visible={true}
                  >
                    <Portal
                      animationDuration={200}
                      animationType="fade"
                      destroy={false}
                      direction="bottom"
                      handlePortalUnmount={[Function]}
                      mask={true}
                      maskType="normal"
                      onMaskClick={[Function]}
                      prefixCls="mcore-popup"
                      visible={true}
                    >
                      <Portal
                        containerInfo={
                          <div
                            class="mcore-popup-container"
                          >
                            <div
                              class="mcore-mask mcore-fade-enter mcore-mask--normal"
                              style="animation-duration: 200ms;"
                            />
                            <div
                              class="mcore-popup__wrapper"
                              role="dialog"
                            >
                              <div
                                class="mcore-popup mcore-popup--bottom mcore-popup--show"
                                role="document"
                                style="transition-duration: 200ms; transition-property: transform;"
                              >
                                <div
                                  class="mcore-picker"
                                >
                                  <div
                                    class="mcore-picker__header"
                                  >
                                    <div
                                      class="mcore-picker__cancel"
                                    >
                                      取消
                                    </div>
                                    <div
                                      class="mcore-picker__title"
                                    >
                                      请选择
                                    </div>
                                    <div
                                      class="mcore-picker__submit"
                                    >
                                      确定
                                    </div>
                                  </div>
                                  <div
                                    class="mcore-picker-view"
                                  >
                                    <div
                                      class="mcore-picker-view__content"
                                    >
                                      <div
                                        class="mcore-wheel"
                                      >
                                        <div
                                          class="mcore-wheel__content"
                                          style="transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; transform: translate(0px,NaNpx) scale(1);"
                                        >
                                          <div
                                            class="mcore-wheel__item mcore-wheel__item--selected"
                                            style="pointer-events: none; transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; transform: rotateX(NaNdeg);"
                                          >
                                            选项一
                                          </div>
                                          <div
                                            class="mcore-wheel__item"
                                            style="pointer-events: none; transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1); transition-duration: 800ms; transform: rotateX(NaNdeg);"
                                          >
                                            选项二
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="mcore-picker-view__mask mcore-picker-view__mask--top"
                                    />
                                    <div
                                      class="mcore-picker-view__mask mcore-picker-view__mask--bottom"
                                    />
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        }
                      >
                        <Mask
                          className="mcore-fade-enter"
                          prefixCls="mcore-mask"
                          style={
                            Object {
                              "WebkitAnimationDuration": "200ms",
                              "animationDuration": "200ms",
                            }
                          }
                          type="normal"
                          visible={true}
                        >
                          <div
                            className="mcore-mask mcore-fade-enter mcore-mask--normal"
                            style={
                              Object {
                                "WebkitAnimationDuration": "200ms",
                                "animationDuration": "200ms",
                              }
                            }
                          />
                        </Mask>
                        <div
                          className="mcore-popup__wrapper"
                          onClick={[Function]}
                          role="dialog"
                          style={Object {}}
                        >
                          <div
                            className="mcore-popup mcore-popup--bottom"
                            role="document"
                            style={
                              Object {
                                "WebkitTransitionDuration": "200ms",
                                "WebkitTransitionProperty": "transform",
                                "transitionDuration": "200ms",
                                "transitionProperty": "transform",
                              }
                            }
                          >
                            <div
                              className="mcore-picker"
                              onClick={[Function]}
                            >
                              <div
                                className="mcore-picker__header"
                              >
                                <div
                                  className="mcore-picker__cancel"
                                  onClick={[Function]}
                                >
                                  取消
                                </div>
                                <div
                                  className="mcore-picker__title"
                                >
                                  请选择
                                </div>
                                <div
                                  className="mcore-picker__submit"
                                  onClick={[Function]}
                                >
                                  确定
                                </div>
                              </div>
                              <PickerView
                                cols={Infinity}
                                dataSource={
                                  Array [
                                    Object {
                                      "label": "选项一",
                                      "value": "1",
                                    },
                                    Object {
                                      "label": "选项二",
                                      "value": "2",
                                    },
                                  ]
                                }
                                disabeld={true}
                                disabled={false}
                                itemRender={[Function]}
                                localeCode="zh-CN"
                                onChange={[Function]}
                                onClick={[Function]}
                                onTransition={[Function]}
                                prefixCls="mcore-picker-view"
                                value={
                                  Array [
                                    "1",
                                  ]
                                }
                                valueMember="value"
                              >
                                <div
                                  className="mcore-picker-view"
                                >
                                  <div
                                    className="mcore-picker-view__content"
                                  >
                                    <Wheel
                                      dataSource={
                                        Array [
                                          Object {
                                            "label": "选项一",
                                            "value": "1",
                                          },
                                          Object {
                                            "label": "选项二",
                                            "value": "2",
                                          },
                                        ]
                                      }
                                      disabled={false}
                                      itemRender={[Function]}
                                      key="0"
                                      onChange={[Function]}
                                      onTransition={[Function]}
                                      prefixCls="mcore-wheel"
                                      value="1"
                                      valueMember="value"
                                    >
                                      <div
                                        className="mcore-wheel"
                                      >
                                        <div
                                          className="mcore-wheel__content"
                                        >
                                          <div
                                            className="mcore-wheel__item mcore-wheel__item--selected"
                                            key="0"
                                          >
                                            选项一
                                          </div>
                                          <div
                                            className="mcore-wheel__item"
                                            key="1"
                                          >
                                            选项二
                                          </div>
                                        </div>
                                      </div>
                                    </Wheel>
                                  </div>
                                  <div
                                    className="mcore-picker-view__mask mcore-picker-view__mask--top"
                                  />
                                  <div
                                    className="mcore-picker-view__mask mcore-picker-view__mask--bottom"
                                  />
                                </div>
                              </PickerView>
                            </div>
                          </div>
                        </div>
                      </Portal>
                    </Portal>
                  </Popup>
                </WarnIfDeprecatedComp>
              </ForwardRef(ForwardedRefComp)>
            </Picker>
          </LocaleReceiver>
        </ForwardRef(forwardRef)>
      </div>
    </Select>
  </LocaleReceiver>
</ForwardRef(forwardRef)>
`;

exports[`Select render defaultValue correctly  1`] = `
<ForwardRef(forwardRef)
  dataSource={
    Array [
      Object {
        "label": "选项一",
        "value": "1",
      },
      Object {
        "label": "选项二",
        "value": "2",
      },
    ]
  }
  defaultValue="2"
>
  <LocaleReceiver
    dataSource={
      Array [
        Object {
          "label": "选项一",
          "value": "1",
        },
        Object {
          "label": "选项二",
          "value": "2",
        },
      ]
    }
    defaultValue="2"
    forwardedRef={null}
  >
    <Select
      cols={Infinity}
      dataSource={
        Array [
          Object {
            "label": "选项一",
            "value": "1",
          },
          Object {
            "label": "选项二",
            "value": "2",
          },
        ]
      }
      defaultValue="2"
      displayRender={[Function]}
      hasArrow={true}
      itemRender={[Function]}
      locale={
        Object {
          "placeholder": "请选择",
        }
      }
      localeCode="zh-CN"
      maskClosable={true}
      onClick={[Function]}
      prefixCls="mcore-select"
      valueMember="value"
    >
      <div
        className="mcore-select mcore-select--arrow"
        onClick={[Function]}
      >
        <div
          className="mcore-select__input"
        >
          <div
            className="mcore-select__value"
          >
            选项二
          </div>
        </div>
        <ForwardRef(forwardRef)
          cols={Infinity}
          dataSource={
            Array [
              Object {
                "label": "选项一",
                "value": "1",
              },
              Object {
                "label": "选项二",
                "value": "2",
              },
            ]
          }
          defaultValue="2"
          itemRender={[Function]}
          localeCode="zh-CN"
          maskClosable={true}
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onOk={[Function]}
          valueMember="value"
          visible={false}
        >
          <LocaleReceiver
            cols={Infinity}
            dataSource={
              Array [
                Object {
                  "label": "选项一",
                  "value": "1",
                },
                Object {
                  "label": "选项二",
                  "value": "2",
                },
              ]
            }
            defaultValue="2"
            forwardedRef={null}
            itemRender={[Function]}
            localeCode="zh-CN"
            maskClosable={true}
            onCancel={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onOk={[Function]}
            valueMember="value"
            visible={false}
          >
            <Picker
              cols={Infinity}
              dataSource={
                Array [
                  Object {
                    "label": "选项一",
                    "value": "1",
                  },
                  Object {
                    "label": "选项二",
                    "value": "2",
                  },
                ]
              }
              defaultValue="2"
              destroy={false}
              itemRender={[Function]}
              locale={
                Object {
                  "cancelText": "取消",
                  "okText": "确定",
                  "title": "请选择",
                }
              }
              localeCode="zh-CN"
              maskClosable={true}
              onCancel={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onOk={[Function]}
              prefixCls="mcore-picker"
              valueMember="value"
              visible={false}
            >
              <ForwardRef(ForwardedRefComp)
                destroy={false}
                onMaskClick={[Function]}
                visible={false}
              >
                <WarnIfDeprecatedComp
                  destroy={false}
                  forwardedRef={null}
                  onMaskClick={[Function]}
                  visible={false}
                >
                  <Popup
                    destroy={false}
                    onMaskClick={[Function]}
                    prefixCls="mcore-popup"
                    visible={false}
                  />
                </WarnIfDeprecatedComp>
              </ForwardRef(ForwardedRefComp)>
            </Picker>
          </LocaleReceiver>
        </ForwardRef(forwardRef)>
      </div>
    </Select>
  </LocaleReceiver>
</ForwardRef(forwardRef)>
`;
